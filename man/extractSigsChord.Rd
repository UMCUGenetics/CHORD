% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/extractSigsChord.R
\name{extractSigsChord}
\alias{extractSigsChord}
\title{Extract mutation contexts in the format compatible with CHORD}
\usage{
extractSigsChord(
  vcf.snv = NULL,
  vcf.indel = vcf.snv,
  vcf.sv = NULL,
  df.snv = NULL,
  df.indel = df.snv,
  df.sv = NULL,
  sample.name = "sample",
  vcf.filters = list(snv = NA, indel = NA, sv = NA),
  sv.caller = "gridss",
  output.path = NULL,
  ref.genome = DEFAULT_GENOME,
  verbose = F
)
}
\arguments{
\item{vcf.snv}{Path to the vcf file containing SNVs}

\item{vcf.indel}{Path to the vcf file containing indels. By default vcf.indel=vcf.snv}

\item{vcf.sv}{Path to the vcf file containing SVs}

\item{df.snv}{A dataframe containing the columns: chrom, pos, ref, alt.}

\item{df.indel}{A dataframe containing the columns: chrom, pos, ref, alt.}

\item{df.sv}{A dataframe with the columns: sv_type, sv_len. sv_type can be DEL, DUP, INV, TRA, BND.}

\item{sample.name}{The name of the sample as a character. Defaults to 'sample' if none is 
provided.}

\item{vcf.filters}{A list of in the form list(snv=character(),indel=character(),sv=character()) 
indicated which variants to keep, corresponding to the values in the vcf FILTER column. NA can be
specified for each list item to ignore filtering of a vcf.}

\item{sv.caller}{SV vcfs are not standardized and therefore need to be parsed differently
depending on the caller. Currently supports 'manta' or 'gridss'.}

\item{output.path}{If a path is specified, the output is written to this path.}

\item{ref.genome}{A character naming the BSgenome reference genome. Default is
"BSgenome.Hsapiens.UCSC.hg19". If another reference genome is indicated, it will also need to be
installed.}

\item{verbose}{Whether to print progress messages}
}
\value{
A 1-row data frame containing the mutational signature contributions
}
\description{
This function is a wrapper for the 3 functions from mutSigExtractor:
extractSigsSnv(), extractSigsIndel(), extractSigsSv(). Some post-processing is done to produce
compatible input for CHORD
}
